"Shows how you might create a macro for the autogenerated Jest rule"

load("@npm//apps/alpha:jest/package_json.bzl", jest_bin = "bin")

def jest_test(name, srcs, deps, jest_config, tsconfig, setupFile = None, size = "small", timeout = "moderate", **kwargs):
    """A macro around the autogenerated jest_test rule

    Args:
        name: name for target
        srcs: list of source files
        deps: list of dependency to run tests
        jest_config: jest.config.js file
        tsconfig: tsconfig.json
        setupFile: setupTests.ts file
        size: test size
        timeout: test timeout length
        **kwargs: pass through values
    """
    data = srcs + deps + [jest_config, tsconfig]

    if setupFile:
        data.append(setupFile)

    templated_args = [
        "--detectOpenHandles",
        "--no-cache",
        "--no-watchman",
        "--ci",
        #"--colors",
    ]

    templated_args.extend(["--config", "$(rootpath %s)" % jest_config])
    # templated_args.extend(["--config", "%s" % jest_config])

    for src in srcs:
        templated_args.extend(["--runTestsByPath", "$(rootpath %s)" % src])
        # templated_args.extend(["--runTestsByPath", "%s" % src])

    jest_bin.jest_test(
        name = name,
        data = data,
        args = templated_args,
        size = size,
        timeout = timeout,
        **kwargs
    )
